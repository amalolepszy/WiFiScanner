{"ast":null,"code":"var _s = $RefreshSig$();\n// https://usehooks.com/useScript/\nimport { useState, useEffect } from 'react';\nexport default function useScript(src) {\n  _s();\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState(src ? 'loading' : 'idle');\n  useEffect(() => {\n    // Allow falsy src value if waiting on other data needed for\n    // constructing the script URL passed to this hook.\n    if (!src) {\n      setStatus('idle');\n      return;\n    }\n    // Fetch existing script element by src\n    // It may have been added by another intance of this hook\n    let script = document.querySelector(`script[src=\"${src}\"]`);\n    if (!script) {\n      // Create script\n      script = document.createElement('script');\n      script.src = src;\n      script.async = true;\n      script.setAttribute('data-status', 'loading');\n      // Add script to document body\n      document.body.appendChild(script);\n      // Store status in attribute on script\n      // This can be read by other instances of this hook\n      const setAttributeFromEvent = event => {\n        script.setAttribute('data-status', event.type === 'load' ? 'ready' : 'error');\n      };\n      script.addEventListener('load', setAttributeFromEvent);\n      script.addEventListener('error', setAttributeFromEvent);\n    } else {\n      // Grab existing script status from attribute and set to state.\n      setStatus(script.getAttribute('data-status'));\n    }\n    // Script event handler to update status in state\n    // Note: Even if the script already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n    const setStateFromEvent = event => {\n      setStatus(event.type === 'load' ? 'ready' : 'error');\n    };\n    // Add event listeners\n    script.addEventListener('load', setStateFromEvent);\n    script.addEventListener('error', setStateFromEvent);\n    // Remove event listeners on cleanup\n    return () => {\n      if (script) {\n        script.removeEventListener('load', setStateFromEvent);\n        script.removeEventListener('error', setStateFromEvent);\n      }\n    };\n  }, [src] // Only re-run effect if script src changes\n  );\n\n  return status;\n}\n_s(useScript, \"cEGZA9lI27LVGINmxeKPAxFxXvI=\");","map":{"version":3,"names":["useState","useEffect","useScript","src","status","setStatus","script","document","querySelector","createElement","async","setAttribute","body","appendChild","setAttributeFromEvent","event","type","addEventListener","getAttribute","setStateFromEvent","removeEventListener"],"sources":["C:/Users/jedre/Desktop/Inzynierka/WiFiScanner/frontend/src/components/hooks/useScript.js"],"sourcesContent":["// https://usehooks.com/useScript/\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport default function useScript (src) {\r\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\r\n  const [status, setStatus] = useState(src ? 'loading' : 'idle')\r\n  useEffect(\r\n    () => {\r\n      // Allow falsy src value if waiting on other data needed for\r\n      // constructing the script URL passed to this hook.\r\n      if (!src) {\r\n        setStatus('idle')\r\n        return\r\n      }\r\n      // Fetch existing script element by src\r\n      // It may have been added by another intance of this hook\r\n      let script = document.querySelector(`script[src=\"${src}\"]`)\r\n      if (!script) {\r\n        // Create script\r\n        script = document.createElement('script')\r\n        script.src = src\r\n        script.async = true\r\n        script.setAttribute('data-status', 'loading')\r\n        // Add script to document body\r\n        document.body.appendChild(script)\r\n        // Store status in attribute on script\r\n        // This can be read by other instances of this hook\r\n        const setAttributeFromEvent = event => {\r\n          script.setAttribute(\r\n            'data-status',\r\n            event.type === 'load' ? 'ready' : 'error'\r\n          )\r\n        }\r\n        script.addEventListener('load', setAttributeFromEvent)\r\n        script.addEventListener('error', setAttributeFromEvent)\r\n      } else {\r\n        // Grab existing script status from attribute and set to state.\r\n        setStatus(script.getAttribute('data-status'))\r\n      }\r\n      // Script event handler to update status in state\r\n      // Note: Even if the script already exists we still need to add\r\n      // event handlers to update the state for *this* hook instance.\r\n      const setStateFromEvent = event => {\r\n        setStatus(event.type === 'load' ? 'ready' : 'error')\r\n      }\r\n      // Add event listeners\r\n      script.addEventListener('load', setStateFromEvent)\r\n      script.addEventListener('error', setStateFromEvent)\r\n      // Remove event listeners on cleanup\r\n      return () => {\r\n        if (script) {\r\n          script.removeEventListener('load', setStateFromEvent)\r\n          script.removeEventListener('error', setStateFromEvent)\r\n        }\r\n      }\r\n    },\r\n    [src] // Only re-run effect if script src changes\r\n  )\r\n  return status\r\n}"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,SAAS,CAAEC,GAAG,EAAE;EAAA;EACtC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACG,GAAG,GAAG,SAAS,GAAG,MAAM,CAAC;EAC9DF,SAAS,CACP,MAAM;IACJ;IACA;IACA,IAAI,CAACE,GAAG,EAAE;MACRE,SAAS,CAAC,MAAM,CAAC;MACjB;IACF;IACA;IACA;IACA,IAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAE,eAAcL,GAAI,IAAG,CAAC;IAC3D,IAAI,CAACG,MAAM,EAAE;MACX;MACAA,MAAM,GAAGC,QAAQ,CAACE,aAAa,CAAC,QAAQ,CAAC;MACzCH,MAAM,CAACH,GAAG,GAAGA,GAAG;MAChBG,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,SAAS,CAAC;MAC7C;MACAJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;MACjC;MACA;MACA,MAAMQ,qBAAqB,GAAGC,KAAK,IAAI;QACrCT,MAAM,CAACK,YAAY,CACjB,aAAa,EACbI,KAAK,CAACC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,CAC1C;MACH,CAAC;MACDV,MAAM,CAACW,gBAAgB,CAAC,MAAM,EAAEH,qBAAqB,CAAC;MACtDR,MAAM,CAACW,gBAAgB,CAAC,OAAO,EAAEH,qBAAqB,CAAC;IACzD,CAAC,MAAM;MACL;MACAT,SAAS,CAACC,MAAM,CAACY,YAAY,CAAC,aAAa,CAAC,CAAC;IAC/C;IACA;IACA;IACA;IACA,MAAMC,iBAAiB,GAAGJ,KAAK,IAAI;MACjCV,SAAS,CAACU,KAAK,CAACC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;IACtD,CAAC;IACD;IACAV,MAAM,CAACW,gBAAgB,CAAC,MAAM,EAAEE,iBAAiB,CAAC;IAClDb,MAAM,CAACW,gBAAgB,CAAC,OAAO,EAAEE,iBAAiB,CAAC;IACnD;IACA,OAAO,MAAM;MACX,IAAIb,MAAM,EAAE;QACVA,MAAM,CAACc,mBAAmB,CAAC,MAAM,EAAED,iBAAiB,CAAC;QACrDb,MAAM,CAACc,mBAAmB,CAAC,OAAO,EAAED,iBAAiB,CAAC;MACxD;IACF,CAAC;EACH,CAAC,EACD,CAAChB,GAAG,CAAC,CAAC;EAAA,CACP;;EACD,OAAOC,MAAM;AACf;AAAC,GAxDuBF,SAAS"},"metadata":{},"sourceType":"module"}