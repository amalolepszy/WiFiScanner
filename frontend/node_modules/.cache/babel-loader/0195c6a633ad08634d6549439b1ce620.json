{"ast":null,"code":"var _s = $RefreshSig$();\n// inspired by https://usehooks.com/useScript/\nimport { useState, useEffect } from 'react';\nexport default function useStylesheet(href) {\n  _s();\n  // Keep track of status (\"idle\", \"loading\", \"ready\", \"error\")\n  const [status, setStatus] = useState(href ? 'loading' : 'idle');\n  useEffect(() => {\n    // Allow falsy href value if waiting on other data needed for\n    // constructing the link URL passed to this hook.\n    if (!href) {\n      setStatus('idle');\n      return;\n    }\n    // Fetch existing stylesheet element by href\n    // It may have been added by another intance of this hook\n    let link = document.querySelector(`link[href=\"${href}\"]`);\n    if (!link) {\n      // Create link\n      link = document.createElement('link');\n      link.href = href;\n      link.rel = 'stylesheet';\n      link.async = true;\n      link.setAttribute('data-status', 'loading');\n      // Add link to document body\n      document.head.appendChild(link);\n      // Store status in attribute on link\n      // This can be read by other instances of this hook\n      const setAttributeFromEvent = event => {\n        link.setAttribute('data-status', event.type === 'load' ? 'ready' : 'error');\n      };\n      link.addEventListener('load', setAttributeFromEvent);\n      link.addEventListener('error', setAttributeFromEvent);\n    } else {\n      // Grab existing link status from attribute and set to state.\n      setStatus(link.getAttribute('data-status'));\n    }\n    // link event handler to update status in state\n    // Note: Even if the link already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n    const setStateFromEvent = event => {\n      setStatus(event.type === 'load' ? 'ready' : 'error');\n    };\n    // Add event listeners\n    link.addEventListener('load', setStateFromEvent);\n    link.addEventListener('error', setStateFromEvent);\n    // Remove event listeners on cleanup\n    return () => {\n      if (link) {\n        link.removeEventListener('load', setStateFromEvent);\n        link.removeEventListener('error', setStateFromEvent);\n      }\n    };\n  }, [href] // Only re-run effect if link href changes\n  );\n\n  return status;\n}\n_s(useStylesheet, \"GA6x5qn6G8GsL6bF4U9MYtSVISk=\");","map":{"version":3,"names":["useState","useEffect","useStylesheet","href","status","setStatus","link","document","querySelector","createElement","rel","async","setAttribute","head","appendChild","setAttributeFromEvent","event","type","addEventListener","getAttribute","setStateFromEvent","removeEventListener"],"sources":["C:/Users/jedre/Desktop/Inz_repo/WiFiScanner/frontend/src/components/hooks/useStylesheet.js"],"sourcesContent":["// inspired by https://usehooks.com/useScript/\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport default function useStylesheet (href) {\r\n  // Keep track of status (\"idle\", \"loading\", \"ready\", \"error\")\r\n  const [status, setStatus] = useState(href ? 'loading' : 'idle')\r\n  useEffect(\r\n    () => {\r\n      // Allow falsy href value if waiting on other data needed for\r\n      // constructing the link URL passed to this hook.\r\n      if (!href) {\r\n        setStatus('idle')\r\n        return\r\n      }\r\n      // Fetch existing stylesheet element by href\r\n      // It may have been added by another intance of this hook\r\n      let link = document.querySelector(`link[href=\"${href}\"]`)\r\n      if (!link) {\r\n        // Create link\r\n        link = document.createElement('link')\r\n        link.href = href\r\n        link.rel = 'stylesheet'\r\n        link.async = true\r\n        link.setAttribute('data-status', 'loading')\r\n        // Add link to document body\r\n        document.head.appendChild(link)\r\n        // Store status in attribute on link\r\n        // This can be read by other instances of this hook\r\n        const setAttributeFromEvent = event => {\r\n          link.setAttribute(\r\n            'data-status',\r\n            event.type === 'load' ? 'ready' : 'error'\r\n          )\r\n        }\r\n        link.addEventListener('load', setAttributeFromEvent)\r\n        link.addEventListener('error', setAttributeFromEvent)\r\n      } else {\r\n        // Grab existing link status from attribute and set to state.\r\n        setStatus(link.getAttribute('data-status'))\r\n      }\r\n      // link event handler to update status in state\r\n      // Note: Even if the link already exists we still need to add\r\n      // event handlers to update the state for *this* hook instance.\r\n      const setStateFromEvent = event => {\r\n        setStatus(event.type === 'load' ? 'ready' : 'error')\r\n      }\r\n      // Add event listeners\r\n      link.addEventListener('load', setStateFromEvent)\r\n      link.addEventListener('error', setStateFromEvent)\r\n      // Remove event listeners on cleanup\r\n      return () => {\r\n        if (link) {\r\n          link.removeEventListener('load', setStateFromEvent)\r\n          link.removeEventListener('error', setStateFromEvent)\r\n        }\r\n      }\r\n    },\r\n    [href] // Only re-run effect if link href changes\r\n  )\r\n  return status\r\n}"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,aAAa,CAAEC,IAAI,EAAE;EAAA;EAC3C;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACG,IAAI,GAAG,SAAS,GAAG,MAAM,CAAC;EAC/DF,SAAS,CACP,MAAM;IACJ;IACA;IACA,IAAI,CAACE,IAAI,EAAE;MACTE,SAAS,CAAC,MAAM,CAAC;MACjB;IACF;IACA;IACA;IACA,IAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAE,cAAaL,IAAK,IAAG,CAAC;IACzD,IAAI,CAACG,IAAI,EAAE;MACT;MACAA,IAAI,GAAGC,QAAQ,CAACE,aAAa,CAAC,MAAM,CAAC;MACrCH,IAAI,CAACH,IAAI,GAAGA,IAAI;MAChBG,IAAI,CAACI,GAAG,GAAG,YAAY;MACvBJ,IAAI,CAACK,KAAK,GAAG,IAAI;MACjBL,IAAI,CAACM,YAAY,CAAC,aAAa,EAAE,SAAS,CAAC;MAC3C;MACAL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,IAAI,CAAC;MAC/B;MACA;MACA,MAAMS,qBAAqB,GAAGC,KAAK,IAAI;QACrCV,IAAI,CAACM,YAAY,CACf,aAAa,EACbI,KAAK,CAACC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,CAC1C;MACH,CAAC;MACDX,IAAI,CAACY,gBAAgB,CAAC,MAAM,EAAEH,qBAAqB,CAAC;MACpDT,IAAI,CAACY,gBAAgB,CAAC,OAAO,EAAEH,qBAAqB,CAAC;IACvD,CAAC,MAAM;MACL;MACAV,SAAS,CAACC,IAAI,CAACa,YAAY,CAAC,aAAa,CAAC,CAAC;IAC7C;IACA;IACA;IACA;IACA,MAAMC,iBAAiB,GAAGJ,KAAK,IAAI;MACjCX,SAAS,CAACW,KAAK,CAACC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;IACtD,CAAC;IACD;IACAX,IAAI,CAACY,gBAAgB,CAAC,MAAM,EAAEE,iBAAiB,CAAC;IAChDd,IAAI,CAACY,gBAAgB,CAAC,OAAO,EAAEE,iBAAiB,CAAC;IACjD;IACA,OAAO,MAAM;MACX,IAAId,IAAI,EAAE;QACRA,IAAI,CAACe,mBAAmB,CAAC,MAAM,EAAED,iBAAiB,CAAC;QACnDd,IAAI,CAACe,mBAAmB,CAAC,OAAO,EAAED,iBAAiB,CAAC;MACtD;IACF,CAAC;EACH,CAAC,EACD,CAACjB,IAAI,CAAC,CAAC;EAAA,CACR;;EACD,OAAOC,MAAM;AACf;AAAC,GAzDuBF,aAAa"},"metadata":{},"sourceType":"module"}